<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
            version="2.4">

    <display-name>geonetwork</display-name>
	<context-param>
		<param-name>contextClass</param-name>
 		<param-value>
	          jeeves.config.springutil.JeevesApplicationContext
	      </param-value>
	</context-param>
	<!-- comma separated list of classes that implement
		 org.springframework.beans.factory.config.BeanFactoryPostProcessor

		 This is an additional method of overriding the spring configuration
		 besides multiple bean configuration files with overriding beans by using
		 same id in multiple files.
		  -->
	<context-param>
		<param-name>applicationContextPostProcessors</param-name>
		<param-value></param-value>
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/config-spring-geonetwork.xml</param-value>
	</context-param>
    <listener>
        <listener-class>jeeves.config.springutil.JeevesContextLoaderListener</listener-class>
    </listener>
    <listener>
	    <listener-class>
	        org.springframework.web.context.request.RequestContextListener
	    </listener-class>
    </listener>
    <!--<context-param>-->
        <!--<param-name>JSON_FACTORY_ATTRIBUTE</param-name>-->
        <!--<param-value>Joe</param-value>-->
    <!--</context-param>-->
    <!-- H2 DB starter configuration / remove if you don't use H2 -->

    <!--
    <listener>
      <listener-class>org.h2.server.web.DbStarter</listener-class>
    </listener>
    -->

    <!-- shut down java cache used for xlinks and spatial index -->
    <listener>
        <listener-class>
            org.apache.jcs.utils.servlet.JCSServletContextListener
        </listener-class>
    </listener>

    <!-- ======================= START ADDED BY LM ============================= -->

    <context-param>
        <description>Full path to OWASP ESAPI security configuration file.</description>
        <param-name>application.config.owasp.security.configuration</param-name>
        <param-value>/WEB-INF/ESAPI.properties</param-value>
    </context-param>

    <listener>
        <listener-class>org.lmv.geodata.geonetwork.app.config.support.ApplicationConfigContextListener</listener-class>
    </listener>

    <filter>
        <display-name>SiteminderSessionFilter</display-name>
        <filter-name>SiteminderSessionFilter</filter-name>
        <filter-class>org.lmv.geodata.web.siteminder.sessionfilter.SiteminderSessionFilter</filter-class>
        <init-param>
            <param-name>siteminderUrl</param-name>
            <param-value>${sitemindersimulator.url}</param-value>
        </init-param>
        <init-param>
            <param-name>targetUrlParamName</param-name>
            <param-value>targetUrl</param-value>
        </init-param>
        <init-param>
            <param-name>siteminderCookieName</param-name>
            <param-value>SMSESSION</param-value>
        </init-param>
        <init-param>
            <param-name>userHeaderName</param-name>
            <param-value>SM_USER</param-value>
        </init-param>
        <init-param>
            <param-name>rolesHeaderName</param-name>
            <param-value>SM_ROLES</param-value>
        </init-param>
        <init-param>
            <param-name>groupHeaderName</param-name>
            <param-value>SM_GROUP</param-value>
        </init-param>
        <init-param>
            <param-name>groupHeaderName</param-name>
            <param-value>SM_GROUP</param-value>
        </init-param>
        <init-param>
            <param-name>firstnameHeaderName</param-name>
            <param-value>SM_FIRSTNAME</param-value>
        </init-param>
        <init-param>
            <param-name>surnameHeaderName</param-name>
            <param-value>SM_SURNAME</param-value>
        </init-param>
        <init-param>
            <param-name>ignorePaths</param-name>
            <param-value>/srv/eng/csw,/srv/swe/csw</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>SiteminderSessionFilter</filter-name>
        <url-pattern>${sitemindersimulator.pattern}</url-pattern>
    </filter-mapping>

       <filter>
        <display-name>SiteminderRoleFixFilter</display-name>
        <filter-name>SiteminderRoleFixFilter</filter-name>
        <filter-class>org.lmv.geodata.web.tomcat.filter.SiteminderRoleFixFilter</filter-class>
        <init-param>
            <description></description>
            <param-name>roleHeaderKey</param-name>
            <param-value>${siteminder.role}</param-value>
        </init-param>
        <init-param>
            <param-name>profileMappings</param-name>
            <param-value>geodatase_sysadmin=Administrator,geodatase_admin=UserAdmin,geodatase_publisher=Reviewer,geodatase_editor=Editor,geodatase_user=Guest</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>SiteminderRoleFixFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <display-name>RedirectFilter</display-name>
        <filter-name>RedirectFilter</filter-name>
        <filter-class>org.lmv.geodata.web.tomcat.filter.RedirectFilter</filter-class>
        <init-param>
            <description></description>
            <param-name>redirectUrl</param-name>
            <param-value>${logout.redirect.url}</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>RedirectFilter</filter-name>
        <url-pattern>*.geodatase</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>CSWFilter</filter-name>
        <filter-class>fi.paikkatietohakemisto.geonetwork.servlet.filter.CSW202LogFilter</filter-class>
        <init-param>
            <param-name>debug</param-name>
            <param-value>off</param-value>
        </init-param>
        <init-param>
            <param-name>path</param-name>
            <param-value>/srv/eng/csw,/srv/swe/csw</param-value>
        </init-param>
        <init-param>
            <param-name>logpath</param-name>
            <param-value>${log.path}</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CSWFilter</filter-name>
        <servlet-name>gn-servlet</servlet-name>
    </filter-mapping>

    <!-- ======================= END ADDED BY LM ============================= -->

    <filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>

    <!-- Spring security -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- url rewrite filter -->
    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <!-- set the amount of seconds the conf file will be checked for reload. can be a valid integer (0 denotes
            check every time, empty/not set denotes no reload check)
        <init-param>
            <param-name>confReloadCheckInterval</param-name>
            <param-value>60</param-value>
        </init-param>
        -->

        <!-- sets up log level (will be logged to context log). Can be: TRACE, DEBUG, INFO (default), WARN, ERROR,
            FATAL, log4j, commons, sysout:{level} (ie, sysout:DEBUG). If you are having trouble using normal levels use
            sysout:DEBUG -->
        <init-param>
            <param-name>logLevel</param-name>
            <param-value>WARN</param-value>
        </init-param>

        <!-- you can disable status page if desired. Can be: true, false (default true) -->
        <init-param>
            <param-name>statusEnabled</param-name>
            <param-value>true</param-value>
        </init-param>

        <!-- you can change status path so that it does not conflict with your installed apps (note: defaults to
            /rewrite-status). Note: must start with / -->
        <init-param>
            <param-name>statusPath</param-name>
            <param-value>/status</param-value>
        </init-param>
    </filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

    <!-- Resources servlet -->
    <filter>
        <filter-name>resources</filter-name>
        <filter-class>org.fao.geonet.resources.ResourceFilter</filter-class>
        <!-- Specified what overrides to use if the
        	(servlet.getServletContext().getServletContextName()).jeeves.configuration.overrides.file
        	system parameter is not specified.
        -->
        <init-param>
            <param-name>jeeves.configuration.overrides.file</param-name>
            <param-value>${system.specific.overrides},${web.xml.main.config.overrides}${web.xml.widget.config.overrides}</param-value>
        </init-param>
    </filter>

    <!-- Only allow administrators or localhost access to the monitoring metrics -->
    <filter>
        <filter-name>MetricsRegistryInitializerFilter</filter-name>
        <filter-class>org.fao.geonet.monitor.webapp.MetricsRegistryInitializerFilter</filter-class>
    </filter>

    <!--  Monitors the number of Active requests, request length and return codes -->
    <filter>
        <filter-name>webappMetricsFilter</filter-name>
        <filter-class>org.fao.geonet.monitor.webapp.DefaultWebappMetricsFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>MetricsRegistryInitializerFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>webappMetricsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>resources</filter-name>
        <url-pattern>/images/logos/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>resources</filter-name>
        <url-pattern>/images/harvesting/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>resources</filter-name>
        <url-pattern>/xml/schemas/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>resources</filter-name>
        <url-pattern>/images/statTmp/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>resources</filter-name>
        <url-pattern>/htmlcache/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>gn-servlet</servlet-name>
        <servlet-class>jeeves.server.sources.http.JeevesServlet</servlet-class>
        <!-- Specified what overrides to use if the
        	(servlet.getServletContext().getServletContextName()).jeeves.configuration.overrides.file
        	system parameter is not specified.
        -->
		<init-param>
			<param-name>jeeves.configuration.overrides.file</param-name>
			<param-value>${system.specific.overrides},${web.xml.main.config.overrides}${web.xml.widget.config.overrides}</param-value>
		</init-param>

        <!--
            Specified what geonetwork data directory to use.
            <init-param>
            <param-name>geonetwork.dir</param-name>
            <param-value>/app/geonetwork_data_dir</param-value>
        </init-param>-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Added by Lantmäteriet
         Facade proxy for LM Topowebbfast WMS -->
    <servlet>
        <display-name>LM Authentication Wms Proxy</display-name>
        <servlet-name>LMAuthProxy</servlet-name>
        <servlet-class>org.lmv.geodata.common.server.servlet.proxy.BasicAuthProxy</servlet-class>
        <init-param>
            <param-name>proxyEndpoint</param-name>
            <param-value>${bgproxy.endpoint}</param-value>
        </init-param>
        <init-param>
            <param-name>connectTimeout</param-name>
            <param-value>10</param-value>
        </init-param>
        <init-param>
            <param-name>readTimeout</param-name>
            <param-value>45</param-value>
        </init-param>
        <init-param>
            <param-name>proxyEndpointParamEncoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>userName</param-name>
            <param-value>${bgproxy.user}</param-value>
        </init-param>
        <init-param>
            <param-name>pwd</param-name>
            <param-value>${bgproxy.pwd}</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

        <!-- Servlet proxy -->
    <servlet>
        <servlet-name>HttpProxy</servlet-name>
        <servlet-class>org.geonetwork.http.proxy.HttpProxyServlet</servlet-class>

    <!--  List of allowed content types -->
    <init-param>
      <param-name>AllowedContentTypes</param-name>
      <param-value>
          application/xml,text/xml,
          text/html,
          text/plain,
          application/vnd.ogc.se_xml,
          application/vnd.ogc.se+xml,
          application/vnd.ogc.success+xml,
          application/vnd.ogc.wms_xml,
          application/vnd.ogc.context+xml,
          application/vnd.ogc.gml,
          application/vnd.ogc.sld+xml,
          application/vnd.google-earth.kml+xml,
          application/json
      </param-value>
    </init-param>

    <!-- List of host alloed to be accesed by the proxy: If not specified or empty, any hosts is allowed -->
    <init-param>
        <param-name>AllowedHosts</param-name>
        <param-value />
    </init-param>

    <!-- Default proxy url if none is provided -->
    <init-param>
        <param-name>DefaultProxyUrl</param-name>
        <param-value>http://www.openlayers.org</param-value>
    </init-param>

    <load-on-startup>0</load-on-startup>
    </servlet>

    <!-- Convenience servlet for linking to various webapps for accessing monitoring data
        Contains 4 sub mappings:
            /metrics?[pretty=(true|false)][class=metric.name] - returns a json response with all of the registered metrics
            /threads - returns a text representation of the stack dump at the moment of the call
            /healthcheck - returns 200 if all checks pass or 500 Internal Service Error if one fails (and human readable response of the failures)
    -->
    <servlet>
        <servlet-name>monitor</servlet-name>
        <servlet-class>com.yammer.metrics.reporting.AdminServlet</servlet-class>
        <init-param>
            <param-name>SHOW_JVM_METRICS</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>criticalHealthChecks</servlet-name>
        <servlet-class>org.fao.geonet.monitor.webapp.GeonetworkHealthCheckServlet</servlet-class>
        <init-param>
            <param-name>REGISTRY_ATTRIBUTE_KEY</param-name>
            <param-value>com.yammer.metrics.reporting.HealthCheckServlet.registry.critical</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>warningHealthChecks</servlet-name>
        <servlet-class>org.fao.geonet.monitor.webapp.GeonetworkHealthCheckServlet</servlet-class>
        <init-param>
            <param-name>REGISTRY_ATTRIBUTE_KEY</param-name>
            <param-value>com.yammer.metrics.reporting.HealthCheckServlet.registry.warning</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>expensiveHealthChecks</servlet-name>
        <servlet-class>org.fao.geonet.monitor.webapp.GeonetworkHealthCheckServlet</servlet-class>
        <init-param>
            <param-name>REGISTRY_ATTRIBUTE_KEY</param-name>
            <param-value>com.yammer.metrics.reporting.HealthCheckServlet.registry.expensive</param-value>
        </init-param>
    </servlet>

    <!-- Added by Lantmäteriet -->
    <servlet-mapping>
        <servlet-name>LMAuthProxy</servlet-name>
        <url-pattern>${bgproxy.urlpattern}</url-pattern>
    </servlet-mapping>

    <!-- Print servlet -->
    <!-- Removed by Lantmäteriet
    <servlet>
        <servlet-name>mapfish.print</servlet-name>
        <servlet-class>org.mapfish.print.servlet.MapPrinterServlet</servlet-class>
        <init-param>
              <param-name>config</param-name>
              <param-value>print-config.yaml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>mapfish.print</servlet-name>
        <url-pattern>/pdf/*</url-pattern>
    </servlet-mapping>
    -->

    <servlet-mapping>
        <servlet-name>monitor</servlet-name>
        <url-pattern>/monitor/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>criticalHealthChecks</servlet-name>
        <url-pattern>/criticalhealthcheck</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>warningHealthChecks</servlet-name>
        <url-pattern>/warninghealthcheck</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>expensiveHealthChecks</servlet-name>
        <url-pattern>/expensivehealthcheck</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>HttpProxy</servlet-name>
        <url-pattern>/proxy</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gn-servlet</servlet-name>
        <url-pattern>/srv/*</url-pattern>
    </servlet-mapping>

    <!-- Web map context servlet -->
    <!--  Removed by Lantmäteriet
    <servlet>
        <servlet-name>wmc</servlet-name>
        <servlet-class>org.geonetwork.map.wmc.WmcServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>wmc</servlet-name>
        <url-pattern>/wmc/*</url-pattern>
    </servlet-mapping>
    -->

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <session-config>
        <!-- 30 minutes -->
        <session-timeout>30</session-timeout>
    </session-config>

    <!-- Error handler/page for some error codes. -->
    <!--  404 Not Found -->
    <error-page>
        <error-code>404</error-code>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>
    <!--  403 Permission Denied  -->
    <error-page>
        <error-code>403</error-code>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>
    <!-- 400 Bad Request (e.g. missing required argument) -->
    <error-page>
        <error-code>400</error-code>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>
    <!-- 502 Bad Gateway (e.g. when error occurs during proxying)  -->
    <error-page>
        <error-code>502</error-code>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>
    <!-- 504 Gateway Timeout (e.g. when timeout error occurs during proxying)  -->
    <error-page>
        <error-code>504</error-code>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>
    <!-- 500 Internal Server error  -->
    <error-page>
        <error-code>500</error-code>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>
    <!-- Unhandled excecptions  -->
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error/exceptionHandler.jsp</location>
    </error-page>

</web-app>
